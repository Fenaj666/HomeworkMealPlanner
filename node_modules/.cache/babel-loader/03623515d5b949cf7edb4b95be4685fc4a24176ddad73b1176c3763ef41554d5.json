{"ast":null,"code":"var _jsxFileName = \"C:\\\\UU\\\\Spring2024\\\\Homework\\\\client\\\\src\\\\components\\\\Plan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Plan = () => {\n  _s();\n  const [caloriePlan, setCaloriePlan] = useState(null);\n  const [calories, setCalories] = useState('');\n  const [savedCalories, setSavedCalories] = useState('');\n  useEffect(() => {\n    fetchCaloriePlan();\n  }, []);\n  const fetchCaloriePlan = () => {\n    axios.get('http://localhost:3000/api/recipes/get-plan').then(res => {\n      setCaloriePlan(res.data.plan);\n      setSavedCalories(res.data.plan); // Сохраняем установленные калории\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleChange = e => {\n    setCalories(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('http://localhost:3000/api/recipes/set-plan', {\n      calories: parseInt(calories)\n    }).then(res => {\n      setSavedCalories(calories); // Устанавливаем сохраненные калории после изменения\n      console.log(res.data.message);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calorie Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), caloriePlan ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your daily calorie plan is \", savedCalories, \" calories.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 90\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calorie-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Set daily calories:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: calories,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Plan, \"jZQJi25aG84Y1Ztmszua3Q8tpTY=\");\n_c = Plan;\nexport default Plan;\nvar _c;\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Plan","_s","caloriePlan","setCaloriePlan","calories","setCalories","savedCalories","setSavedCalories","fetchCaloriePlan","get","then","res","data","plan","catch","err","console","log","handleChange","e","target","value","handleSubmit","preventDefault","post","parseInt","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/UU/Spring2024/Homework/client/src/components/Plan.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Plan = () => {\r\n    const [caloriePlan, setCaloriePlan] = useState(null);\r\n    const [calories, setCalories] = useState('');\r\n    const [savedCalories, setSavedCalories] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchCaloriePlan();\r\n    }, []);\r\n\r\n    const fetchCaloriePlan = () => {\r\n        axios.get('http://localhost:3000/api/recipes/get-plan')\r\n            .then(res => {\r\n                setCaloriePlan(res.data.plan);\r\n                setSavedCalories(res.data.plan); // Сохраняем установленные калории\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setCalories(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:3000/api/recipes/set-plan', { calories: parseInt(calories) })\r\n            .then(res => {\r\n                setSavedCalories(calories); // Устанавливаем сохраненные калории после изменения\r\n                console.log(res.data.message);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"plan\">\r\n            <h2>Calorie Plan</h2>\r\n            {caloriePlan ? <p>Your daily calorie plan is {savedCalories} calories.</p> : <p>Loading...</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"calorie-input\">\r\n                    <label>Set daily calories:</label>\r\n                    <input type=\"text\" value={calories} onChange={handleChange} />\r\n                    <button type=\"submit\">Save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Plan;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}