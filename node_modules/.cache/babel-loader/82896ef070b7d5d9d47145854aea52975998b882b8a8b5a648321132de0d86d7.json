{"ast":null,"code":"var _jsxFileName = \"C:\\\\UU\\\\Spring2024\\\\Homework\\\\client\\\\src\\\\components\\\\pages\\\\MyRecipesPage.jsx\",\n  _s = $RefreshSig$();\n// MyRecipesPage.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport RecipeList from '../RecipeList';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyRecipesPage = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    // Fetch recipes from backend when the component mounts\n    axios.get('/api/recipes/my-recipes').then(response => {\n      setRecipes(response.data.recipes);\n    }).catch(error => {\n      console.error('Error fetching recipes:', error);\n    });\n  }, []); // Run once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(MyRecipesPage, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = MyRecipesPage;\nexport default MyRecipesPage;\nvar _c;\n$RefreshReg$(_c, \"MyRecipesPage\");","map":{"version":3,"names":["React","useState","useEffect","RecipeList","axios","jsxDEV","_jsxDEV","MyRecipesPage","_s","recipes","setRecipes","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/UU/Spring2024/Homework/client/src/components/pages/MyRecipesPage.jsx"],"sourcesContent":["// MyRecipesPage.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport RecipeList from '../RecipeList';\r\nimport axios from 'axios';\r\n\r\nconst MyRecipesPage = () => {\r\n    const [recipes, setRecipes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch recipes from backend when the component mounts\r\n        axios.get('/api/recipes/my-recipes')\r\n            .then(response => {\r\n                setRecipes(response.data.recipes);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching recipes:', error);\r\n            });\r\n    }, []); // Run once when the component mounts\r\n\r\n    return (\r\n        <div>\r\n            <h1>My Recipes</h1>\r\n            <RecipeList recipes={recipes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyRecipesPage;\r\n\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACO,GAAG,CAAC,yBAAyB,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAI;MACdH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAACL,OAAO,CAAC;IACrC,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIV,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA,CAACH,UAAU;MAACM,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAAAd,EAAA,CApBKD,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAsBnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}