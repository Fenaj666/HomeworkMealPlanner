{"ast":null,"code":"var _jsxFileName = \"C:\\\\UU\\\\Spring2024\\\\Homework\\\\client\\\\src\\\\components\\\\pages\\\\MyRecipesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RecipeList from '../RecipeList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyRecipesPage = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n  const fetchRecipes = () => {\n    fetch('http://localhost:3000/api/recipes/my-recipes').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setRecipes(data.recipes);\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(MyRecipesPage, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = MyRecipesPage;\nexport default MyRecipesPage;\nvar _c;\n$RefreshReg$(_c, \"MyRecipesPage\");","map":{"version":3,"names":["React","useState","useEffect","RecipeList","jsxDEV","_jsxDEV","MyRecipesPage","_s","recipes","setRecipes","fetchRecipes","fetch","then","response","ok","Error","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/UU/Spring2024/Homework/client/src/components/pages/MyRecipesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RecipeList from '../RecipeList';\r\n\r\nconst MyRecipesPage = () => {\r\n    const [recipes, setRecipes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchRecipes();\r\n    }, []);\r\n\r\n    const fetchRecipes = () => {\r\n        fetch('http://localhost:3000/api/recipes/my-recipes')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setRecipes(data.recipes);\r\n            })\r\n            .catch(error => {\r\n                console.error('There was a problem with your fetch operation:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>My Recipes</h1>\r\n            <RecipeList recipes={recipes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyRecipesPage;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZQ,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,8CAA8C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVR,UAAU,CAACQ,IAAI,CAACT,OAAO,CAAC;IAC5B,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IAC1E,CAAC,CAAC;EACV,CAAC;EAED,oBACId,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBpB,OAAA,CAACF,UAAU;MAACK,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA7BKD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}