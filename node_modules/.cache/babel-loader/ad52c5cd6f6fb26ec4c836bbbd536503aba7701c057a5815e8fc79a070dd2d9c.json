{"ast":null,"code":"/*\nimport React, { useState, useEffect } from 'react';\nimport Menu from './components/Menu';\nimport AddRecipeForm from './components/AddRecipeForm';\nimport Schedule from './components/Schedule';\nimport Plan from './components/Plan';\nimport ShoppingCart from './components/ShoppingCart';\n\nconst App = () => {\n    const [ingredients, setIngredients] = useState([]);\n\n    useEffect(() => {\n        // Fetch shopping basket data from backend on component mount\n        fetchBasketData();\n    }, []);\n\n    const fetchBasketData = () => {\n        // Fetch shopping basket data from backend\n        fetch('/api/recipes/get-basket')\n            .then((response) => response.json())\n            .then((data) => setIngredients(data.basket))\n            .catch((error) => console.error('Error fetching shopping basket data:', error));\n    };\n\n    const handleAddRecipe = (recipe) => {\n        // Send recipe data to backend for addition\n        fetch('/api/recipes/create', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(recipe),\n        })\n            .then((response) => response.json())\n            .then((data) => console.log('Recipe added successfully:', data))\n            .catch((error) => console.error('Error adding recipe:', error));\n    };\n\n    const handleMarkAsPurchased = (ingredientId) => {\n        // Send ingredient ID to backend to mark as purchased\n        fetch('/api/recipes/mark-as-purchased', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ ingredientId }),\n        })\n            .then(() => fetchBasketData())\n            .catch((error) => console.error('Error marking ingredient as purchased:', error));\n    };\n\n    const handleRemoveFromBasket = (ingredientId) => {\n        // Send ingredient ID to backend to remove from basket\n        fetch('/api/recipes/remove-from-basket', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ ingredientId }),\n        })\n            .then(() => fetchBasketData())\n            .catch((error) => console.error('Error removing ingredient from basket:', error));\n    };\n\n    return (\n        <div className=\"app\">\n            <Menu />\n            <div className=\"main\">\n                <AddRecipeForm onAddRecipe={handleAddRecipe} />\n                <Schedule />\n                <Plan />\n                <ShoppingCart\n                    ingredients={ingredients}\n                    onMarkAsPurchased={handleMarkAsPurchased}\n                    onRemoveFromBasket={handleRemoveFromBasket}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n*/","map":{"version":3,"names":[],"sources":["C:/UU/Spring2024/Homework/client/src/App.js"],"sourcesContent":["/*\nimport React, { useState, useEffect } from 'react';\nimport Menu from './components/Menu';\nimport AddRecipeForm from './components/AddRecipeForm';\nimport Schedule from './components/Schedule';\nimport Plan from './components/Plan';\nimport ShoppingCart from './components/ShoppingCart';\n\nconst App = () => {\n    const [ingredients, setIngredients] = useState([]);\n\n    useEffect(() => {\n        // Fetch shopping basket data from backend on component mount\n        fetchBasketData();\n    }, []);\n\n    const fetchBasketData = () => {\n        // Fetch shopping basket data from backend\n        fetch('/api/recipes/get-basket')\n            .then((response) => response.json())\n            .then((data) => setIngredients(data.basket))\n            .catch((error) => console.error('Error fetching shopping basket data:', error));\n    };\n\n    const handleAddRecipe = (recipe) => {\n        // Send recipe data to backend for addition\n        fetch('/api/recipes/create', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(recipe),\n        })\n            .then((response) => response.json())\n            .then((data) => console.log('Recipe added successfully:', data))\n            .catch((error) => console.error('Error adding recipe:', error));\n    };\n\n    const handleMarkAsPurchased = (ingredientId) => {\n        // Send ingredient ID to backend to mark as purchased\n        fetch('/api/recipes/mark-as-purchased', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ ingredientId }),\n        })\n            .then(() => fetchBasketData())\n            .catch((error) => console.error('Error marking ingredient as purchased:', error));\n    };\n\n    const handleRemoveFromBasket = (ingredientId) => {\n        // Send ingredient ID to backend to remove from basket\n        fetch('/api/recipes/remove-from-basket', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ ingredientId }),\n        })\n            .then(() => fetchBasketData())\n            .catch((error) => console.error('Error removing ingredient from basket:', error));\n    };\n\n    return (\n        <div className=\"app\">\n            <Menu />\n            <div className=\"main\">\n                <AddRecipeForm onAddRecipe={handleAddRecipe} />\n                <Schedule />\n                <Plan />\n                <ShoppingCart\n                    ingredients={ingredients}\n                    onMarkAsPurchased={handleMarkAsPurchased}\n                    onRemoveFromBasket={handleRemoveFromBasket}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n*/\n\n\n\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}